#scalar DateTime

type Query {
    getAppVersions: [AppVersion]
    getAppVersionsPaged(page: Int, size: Int): [AppVersion]
    getAppVersionById(id: Int): AppVersion

    getCalls: [Call]
    getCallsPaged(page: Int, size: Int): [Call]
    getCallById(id: Int): Call

    getCategories: [Category]
    getCategoriesPaged(page: Int, size: Int): [Category]
    getCategoryById(id: Int): Category

    getCoins: [Coin]
    getCoinsPaged(page: Int, size: Int): [Coin]
    getCoinById(id: Int): Coin

    getDebtors: [Debtor]
    getDebtorsPaged(page: Int, size: Int): [Debtor]
    getDebtorById(id: Int): Debtor

    getDeposits: [Deposit]
    getDepositsPaged(page: Int, size: Int): [Deposit]
    getDepositById(id: Int): Deposit

    getFiles: [File]
    getFilesPaged(page: Int, size: Int): [File]
    getFileById(id: Int): File

    getFrequentlyAskedQuestions: [FrequentlyAskedQuestion]
    getFrequentlyAskedQuestionsPaged(page: Int, size: Int): [FrequentlyAskedQuestion]
    getFrequentlyAskedQuestionById(id: Int): FrequentlyAskedQuestion

    getLanguages: [Language]
    getLanguagesPaged(page: Int, size: Int): [Language]
    getLanguageById(id: Int): Language

    getNotifications: [Notification]
    getNotificationsPaged(page: Int, size: Int): [Notification]
    getNotificationById(id: Int): Notification

    getPasswordResets: [PasswordReset]
    getPasswordResetsPaged(page: Int, size: Int): [PasswordReset]
    getPasswordResetById(id: Int): PasswordReset

    getRatings: [Rating]
    getRatingsPaged(page: Int, size: Int): [Rating]
    getRatingById(id: Int): Rating

    getRoles: [Role]
    getRolesPaged(page: Int, size: Int): [Role]
    getRoleById(id: Int): Role

    getThemes: [Theme]
    getThemesPaged(page: Int, size: Int): [Theme]
    getThemeById(id: Int): Theme

    getTranslatorProfiles: [TranslatorProfile]
    getTranslatorProfilesPaged(page: Int, size: Int): [TranslatorProfile]
    getTranslatorProfileById(id: Int): TranslatorProfile

    getUsers: [User]
    getUsersPaged(page: Int, size: Int): [User]
    getUserById(id: Int): User

    getUserProfiles: [UserProfile]
    getUserProfilesPaged(page: Int, size: Int): [UserProfile]
    getUserProfileById(id: Int): UserProfile

    getUserWithdrawals: [Withdrawal]
    getUserWithdrawalsPaged(page: Int, size: Int): [Withdrawal]
    getUserWithdrawalById(id: Int): Withdrawal

    login(loginUserInput: LoginUserInput) : LoginPayload
}

type Mutation {
    createAppVersion(appVersionInput: AppVersionCreateInput) : AppVersion
    updateAppVersion(appVersionInput: AppVersionUpdateInput) : AppVersion
    deleteAppVersionById(id: ID!): Boolean

    createCall(callInput: CallCreateInput) : Call
    updateCall(callInput: CallUpdateInput) : Call
    deleteCallById(id: ID!): Boolean

    createCategory(categoryInput: CategoryCreateInput) : Category
    updateCategory(categoryInput: CategoryUpdateInput) : Category
    deleteCategoryById(id: ID!): Boolean

    createCoin(coinInput: CoinCreateInput) : Coin
    updateCoin(coinInput: CoinUpdateInput) : Coin
    deleteCoinById(id: ID!): Boolean

    createDebtor(debtorInput: DebtorCreateInput) : Debtor
    updateDebtor(debtorInput: DebtorUpdateInput) : Debtor
    deleteDebtorById(id: ID!) : Boolean

    createDeposit(depositInput: DepositCreateInput) : Deposit
    updateDeposit(depositInput: DepositUpdateInput) : Deposit
    deleteDepositById(id: ID!) : Boolean

    createFile(fileInput: FileCreateInput) : File
    updateFile(fileInput: FileUpdateInput) : File
    deleteFileById(id: ID!) : Boolean

    createFrequentlyAskedQuestion(frequentlyAskedQuestionInput: FrequentlyAskedQuestionCreateInput) : FrequentlyAskedQuestion
    updateFrequentlyAskedQuestion(frequentlyAskedQuestionInput: FrequentlyAskedQuestionUpdateInput) : FrequentlyAskedQuestion
    deleteFrequentlyAskedQuestionById(id: ID!) : Boolean

    createLanguage(languageInput: LanguageCreateInput) : Language
    updateLanguage(languageInput: LanguageUpdateInput) : Language
    deleteLanguageById(id: ID!) : Boolean

    createNotification(notificationInput: NotificationCreateInput) : Notification
    updateNotification(notificationInput: NotificationUpdateInput) : Notification
    deleteNotificationById(id: ID!) : Boolean

    createPasswordReset(passwordResetInput : PasswordResetCreateInput) : PasswordReset
    updatePasswordReset(passwordResetInput: PasswordResetUpdateInput) : PasswordReset
    deletePasswordResetById(id: ID!) : Boolean

    createRating(ratingInput : RatingCreateInput) : Rating
    updateRating(ratingInput: RatingUpdateInput) : Rating
    deleteRatingById(id: ID!) : Boolean

    createRole(roleInput : RoleCreateInput) : Role
    updateRole(roleInput: RoleUpdateInput) : Role
    deleteRoleById(id: ID!) : Boolean

    createTheme(themeInput : ThemeCreateInput) : Theme
    updateTheme(themeInput: ThemeUpdateInput) : Theme
    deleteThemeById(id: ID!) : Boolean

    createTranslatorProfile(translatorProfileInput : TranslatorProfileCreateInput) : TranslatorProfile
    updateTranslatorProfile(translatorProfileInput: TranslatorProfileUpdateInput) : TranslatorProfile
    deleteTranslatorProfileById(id: ID!) : Boolean

    createUser(userInput : UserCreateInput) : User
    updateUser(userInput: UserUpdateInput) : User
    deleteUserById(id: ID!) : Boolean

    createUserProfile(userProfileInput : UserProfileCreateInput) : UserProfile
    updateUserProfile(userProfileInput: UserProfileUpdateInput) : UserProfile
    deleteUserProfileById(id: ID!) : Boolean

    createUserWithdrawal(withdrawalInput : WithdrawalCreateInput) : Withdrawal
    updateUserWithdrawal(withdrawalInput: WithdrawalUpdateInput) : Withdrawal
    deleteUserWithdrawalById(id: ID!) : Boolean

    registration(registrationUserInput : RegistrationUserCreateInput) : User

}
